let balance = 0;
const tg = window.Telegram.WebApp;

document.addEventListener('DOMContentLoaded', function() {
    tg.expand();
    tg.BackButton.hide();

    // –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –±–∞–ª–∞–Ω—Å —É –±–æ—Ç–∞
    tg.sendData(JSON.stringify({action: 'get_balance'}));

    document.getElementById('spinBtn').addEventListener('click', spin);
});

function updateBalance(newBalance) {
    balance = newBalance;
    document.getElementById('balance').textContent = balance;

    if (balance < 10) {
        document.getElementById('spinBtn').disabled = true;
    } else {
        document.getElementById('spinBtn').disabled = false;
    }
}

function spin() {
    if (balance < 10) {
        showMessage('–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –æ—á–∫–æ–≤ –¥–ª—è —Å—Ç–∞–≤–∫–∏!');
        return;
    }

    const slots = document.querySelectorAll('.slot');
    slots.forEach(slot => {
        slot.classList.add('spinning');
        slot.textContent = 'üé∞';
    });

    document.getElementById('spinBtn').disabled = true;

    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –Ω–∞ —Å–ø–∏–Ω
    tg.sendData(JSON.stringify({action: 'spin'}));
}

function showMessage(text) {
    const msg = document.createElement('div');
    msg.className = 'message twinkle';
    msg.textContent = text;
    document.body.appendChild(msg);

    setTimeout(() => {
        msg.remove();
    }, 3000);
}

// –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π –æ—Ç –±–æ—Ç–∞
function handleMessage(event) {
    try {
        const data = JSON.parse(event.data);

        if (data.action === 'update_balance') {
            updateBalance(data.balance);
        }
        else if (data.action === 'spin_result') {
            const slots = document.querySelectorAll('.slot');
            slots.forEach(slot => {
                slot.classList.remove('spinning');
                const symbols = ['‚≠ê', 'üçí', 'üçã', 'üçä', 'üçá', '7Ô∏è‚É£'];
                slot.textContent = symbols[Math.floor(Math.random() * symbols.length)];
                slot.classList.add('win-animation');
            });

            updateBalance(data.balance);
            document.getElementById('spinBtn').disabled = balance < 10;

            setTimeout(() => {
                slots.forEach(slot => slot.classList.remove('win-animation'));

                if (data.win > 0) {
                    showMessage(`–í—ã –≤—ã–∏–≥—Ä–∞–ª–∏ ${data.win} –æ—á–∫–æ–≤!`);
                } else {
                    showMessage('–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑!');
                }
            }, 1000);
        }
        else if (data.startsWith('error:')) {
            showMessage(data.substring(6));
        }
    } catch (e) {
        console.error('Error parsing message:', e);
    }
}

// –ü–æ–¥–ø–∏—Å—ã–≤–∞–µ–º—Å—è –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç –±–æ—Ç–∞
window.addEventListener('message', handleMessage);